/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['utils.js']) {
  _$jscoverage['utils.js'] = [];
  _$jscoverage['utils.js'][1] = 0;
  _$jscoverage['utils.js'][2] = 0;
  _$jscoverage['utils.js'][13] = 0;
  _$jscoverage['utils.js'][14] = 0;
  _$jscoverage['utils.js'][17] = 0;
  _$jscoverage['utils.js'][19] = 0;
  _$jscoverage['utils.js'][22] = 0;
  _$jscoverage['utils.js'][25] = 0;
  _$jscoverage['utils.js'][28] = 0;
  _$jscoverage['utils.js'][31] = 0;
  _$jscoverage['utils.js'][34] = 0;
  _$jscoverage['utils.js'][35] = 0;
  _$jscoverage['utils.js'][41] = 0;
  _$jscoverage['utils.js'][42] = 0;
  _$jscoverage['utils.js'][46] = 0;
}
_$jscoverage['utils.js'].source = ["define<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","  <span class=\"k\">var</span>","    days <span class=\"k\">=</span> <span class=\"k\">[</span>","      <span class=\"s\">'Sunday'</span><span class=\"k\">,</span> <span class=\"s\">'Monday'</span><span class=\"k\">,</span> <span class=\"s\">'Tuesday'</span><span class=\"k\">,</span> <span class=\"s\">'Wednesday'</span><span class=\"k\">,</span>","      <span class=\"s\">'Thursday'</span><span class=\"k\">,</span> <span class=\"s\">'Friday'</span><span class=\"k\">,</span> <span class=\"s\">'Saturday'</span>","    <span class=\"k\">],</span> ","","    months <span class=\"k\">=</span> <span class=\"k\">[</span>","      <span class=\"s\">'January'</span><span class=\"k\">,</span><span class=\"s\">'February'</span><span class=\"k\">,</span><span class=\"s\">'March'</span><span class=\"k\">,</span><span class=\"s\">'April'</span><span class=\"k\">,</span><span class=\"s\">'May'</span><span class=\"k\">,</span><span class=\"s\">'June'</span><span class=\"k\">,</span><span class=\"s\">'July'</span><span class=\"k\">,</span>","      <span class=\"s\">'August'</span><span class=\"k\">,</span><span class=\"s\">'September'</span><span class=\"k\">,</span><span class=\"s\">'October'</span><span class=\"k\">,</span><span class=\"s\">'November'</span><span class=\"k\">,</span><span class=\"s\">'December'</span>","    <span class=\"k\">];</span>","","  <span class=\"k\">function</span> i<span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span>","    <span class=\"k\">return</span> parseInt<span class=\"k\">(</span> n<span class=\"k\">,</span> <span class=\"s\">10</span> <span class=\"k\">);</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">return</span> <span class=\"k\">{</span>","    isDate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>call<span class=\"k\">(</span> d <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">'[object Date]'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    getLastDay<span class=\"k\">:</span> <span class=\"k\">function</span> getLastDay<span class=\"k\">(</span>year<span class=\"k\">,</span> month<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span> year<span class=\"k\">,</span> month<span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">).</span>getDate<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    getMonthName<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>m<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> months<span class=\"k\">[</span> i<span class=\"k\">(</span> m <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    getDayName<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> days<span class=\"k\">[</span> i<span class=\"k\">(</span> d <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    getDayAbbr<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>d<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>getDayName<span class=\"k\">(</span> d <span class=\"k\">).</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">3</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    isSameDay<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>x<span class=\"k\">,</span> y<span class=\"k\">)</span><span class=\"k\">{</span>","      x <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>x<span class=\"k\">);</span> y <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>y<span class=\"k\">);</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>isDate<span class=\"k\">(</span>x<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>isDate<span class=\"k\">(</span>y<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","        x<span class=\"k\">.</span>getFullYear<span class=\"k\">()</span> <span class=\"k\">===</span> y<span class=\"k\">.</span>getFullYear<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span>","        x<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">===</span> y<span class=\"k\">.</span>getMonth<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span>","        x<span class=\"k\">.</span>getDate<span class=\"k\">()</span> <span class=\"k\">===</span> y<span class=\"k\">.</span>getDate<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    isSameMonth<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>year<span class=\"k\">,</span> month<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">var</span> d <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">();</span>","      <span class=\"k\">return</span> i<span class=\"k\">(</span> year <span class=\"k\">)</span> <span class=\"k\">===</span> d<span class=\"k\">.</span>getFullYear<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span>","        i<span class=\"k\">(</span> month <span class=\"k\">)</span> <span class=\"k\">===</span> d<span class=\"k\">.</span>getMonth<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    isValidHour<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>h<span class=\"k\">)</span><span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"s\">/^([01]?[0-9]|2[0-4]):[0-5][0-9]$/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> h <span class=\"k\">)</span> <span class=\"k\">||</span> h <span class=\"k\">===</span> <span class=\"s\">'--:--'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['utils.js'][1]++;
define((function () {
  _$jscoverage['utils.js'][2]++;
  var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  _$jscoverage['utils.js'][13]++;
  function i(n) {
    _$jscoverage['utils.js'][14]++;
    return parseInt(n, 10);
}
  _$jscoverage['utils.js'][17]++;
  return ({isDate: (function (d) {
  _$jscoverage['utils.js'][19]++;
  return (Object.prototype.toString.call(d) === "[object Date]");
}), getLastDay: (function getLastDay(year, month) {
  _$jscoverage['utils.js'][22]++;
  return new Date(year, month, 0).getDate();
}), getMonthName: (function (m) {
  _$jscoverage['utils.js'][25]++;
  return (months[i(m)] || "");
}), getDayName: (function (d) {
  _$jscoverage['utils.js'][28]++;
  return (days[i(d)] || "");
}), getDayAbbr: (function (d) {
  _$jscoverage['utils.js'][31]++;
  return this.getDayName(d).substr(0, 3);
}), isSameDay: (function (x, y) {
  _$jscoverage['utils.js'][34]++;
  x = new Date(x);
  _$jscoverage['utils.js'][34]++;
  y = new Date(y);
  _$jscoverage['utils.js'][35]++;
  return (this.isDate(x) && this.isDate(y) && (x.getFullYear() === y.getFullYear()) && (x.getMonth() === y.getMonth()) && (x.getDate() === y.getDate()));
}), isSameMonth: (function (year, month) {
  _$jscoverage['utils.js'][41]++;
  var d = new Date();
  _$jscoverage['utils.js'][42]++;
  return ((i(year) === d.getFullYear()) && (i(month) === d.getMonth()));
}), isValidHour: (function (h) {
  _$jscoverage['utils.js'][46]++;
  return (/^([01]?[0-9]|2[0-4]):[0-5][0-9]$/.test(h) || (h === "--:--"));
})});
}));
