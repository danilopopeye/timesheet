/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['calculator.js']) {
  _$jscoverage['calculator.js'] = [];
  _$jscoverage['calculator.js'][1] = 0;
  _$jscoverage['calculator.js'][2] = 0;
  _$jscoverage['calculator.js'][3] = 0;
  _$jscoverage['calculator.js'][6] = 0;
  _$jscoverage['calculator.js'][7] = 0;
  _$jscoverage['calculator.js'][8] = 0;
  _$jscoverage['calculator.js'][11] = 0;
  _$jscoverage['calculator.js'][12] = 0;
  _$jscoverage['calculator.js'][13] = 0;
  _$jscoverage['calculator.js'][14] = 0;
  _$jscoverage['calculator.js'][16] = 0;
  _$jscoverage['calculator.js'][17] = 0;
  _$jscoverage['calculator.js'][18] = 0;
  _$jscoverage['calculator.js'][21] = 0;
  _$jscoverage['calculator.js'][23] = 0;
  _$jscoverage['calculator.js'][27] = 0;
  _$jscoverage['calculator.js'][31] = 0;
}
_$jscoverage['calculator.js'].source = ["define<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","  <span class=\"k\">var</span> timeAsString <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>time<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> twoDigits<span class=\"k\">(</span>time<span class=\"k\">.</span>getHours<span class=\"k\">())</span> <span class=\"k\">+</span> <span class=\"s\">\":\"</span> <span class=\"k\">+</span> twoDigits<span class=\"k\">(</span>time<span class=\"k\">.</span>getMinutes<span class=\"k\">());</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"k\">var</span> twoDigits <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>string<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> collection <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"s\">\"00\"</span> <span class=\"k\">+</span> string<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">);</span>","    <span class=\"k\">return</span> collection<span class=\"k\">[</span>collection<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">+</span> collection<span class=\"k\">[</span>collection<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">];</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">var</span> convertTime <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>arrivedAt<span class=\"k\">,</span> period<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> collection <span class=\"k\">=</span> arrivedAt<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">/[^0-9]/</span><span class=\"k\">);</span>","    <span class=\"k\">var</span> hours <span class=\"k\">=</span> collection<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","    <span class=\"k\">var</span> minutes <span class=\"k\">=</span> collection<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","","    <span class=\"k\">var</span> dateTime <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span><span class=\"s\">2011</span><span class=\"k\">,</span> <span class=\"s\">01</span><span class=\"k\">,</span> <span class=\"s\">01</span><span class=\"k\">,</span> hours<span class=\"k\">,</span> minutes<span class=\"k\">);</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">new</span> Date<span class=\"k\">(</span>dateTime<span class=\"k\">.</span>getTime<span class=\"k\">()</span> <span class=\"k\">+</span> period<span class=\"k\">);</span>","    <span class=\"k\">return</span> timeAsString<span class=\"k\">(</span>result<span class=\"k\">);</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  <span class=\"k\">return</span> <span class=\"k\">{</span>","    minTime<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>arrivedAt<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> convertTime<span class=\"k\">(</span>arrivedAt<span class=\"k\">,</span> <span class=\"k\">((</span><span class=\"s\">9</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">+</span> <span class=\"s\">33</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">*</span> <span class=\"s\">1000</span><span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    regularTime<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>arrivedAt<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> convertTime<span class=\"k\">(</span>arrivedAt<span class=\"k\">,</span> <span class=\"k\">((</span><span class=\"s\">9</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">+</span> <span class=\"s\">48</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">*</span> <span class=\"s\">1000</span><span class=\"k\">));</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    maxTime<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>arrivedAt<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> convertTime<span class=\"k\">(</span>arrivedAt<span class=\"k\">,</span> <span class=\"k\">((</span><span class=\"s\">9</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">+</span> <span class=\"s\">63</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">60</span> <span class=\"k\">*</span> <span class=\"s\">1000</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['calculator.js'][1]++;
define((function () {
  _$jscoverage['calculator.js'][2]++;
  var timeAsString = (function (time) {
  _$jscoverage['calculator.js'][3]++;
  return (twoDigits(time.getHours()) + ":" + twoDigits(time.getMinutes()));
});
  _$jscoverage['calculator.js'][6]++;
  var twoDigits = (function (string) {
  _$jscoverage['calculator.js'][7]++;
  var collection = ("00" + string).split("");
  _$jscoverage['calculator.js'][8]++;
  return (collection[(collection.length - 2)] + collection[(collection.length - 1)]);
});
  _$jscoverage['calculator.js'][11]++;
  var convertTime = (function (arrivedAt, period) {
  _$jscoverage['calculator.js'][12]++;
  var collection = arrivedAt.split(/[^0-9]/);
  _$jscoverage['calculator.js'][13]++;
  var hours = collection[0];
  _$jscoverage['calculator.js'][14]++;
  var minutes = collection[1];
  _$jscoverage['calculator.js'][16]++;
  var dateTime = new Date(2011, 1, 1, hours, minutes);
  _$jscoverage['calculator.js'][17]++;
  var result = new Date((dateTime.getTime() + period));
  _$jscoverage['calculator.js'][18]++;
  return timeAsString(result);
});
  _$jscoverage['calculator.js'][21]++;
  return ({minTime: (function (arrivedAt) {
  _$jscoverage['calculator.js'][23]++;
  return convertTime(arrivedAt, 34380000);
}), regularTime: (function (arrivedAt) {
  _$jscoverage['calculator.js'][27]++;
  return convertTime(arrivedAt, 35280000);
}), maxTime: (function (arrivedAt) {
  _$jscoverage['calculator.js'][31]++;
  return convertTime(arrivedAt, 36180000);
})});
}));
